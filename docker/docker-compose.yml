services:
  postgres_develop:
    container_name: postgres_develop
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER_DEVELOP}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_DEVELOP}
      - POSTGRES_DB=${POSTGRES_DB_DEVELOP}
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - nest-net
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-U',
          '${POSTGRES_USER_DEVELOP}',
          '-d',
          '${POSTGRES_DB_DEVELOP}',
        ]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres_main:
    container_name: postgres_main
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER_MAIN}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_MAIN}
      - POSTGRES_DB=${POSTGRES_DB_MAIN}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - nest-net
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-U',
          '${POSTGRES_USER_MAIN}',
          '-d',
          '${POSTGRES_DB_MAIN}',
        ]
      interval: 10s
      timeout: 3s
      retries: 3

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_storage:/data
    env_file:
      - .env
    # Si se desea, se pueden sobreescribir o complementar variables aqu√≠
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data

networks:
  nest-net:
    driver: bridge

volumes:
  postgres_data:
  minio_storage: {}
