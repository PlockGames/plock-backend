var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.414,1,1.407]],["body/controllers/AppController.html",[0,0.679,1,2.308,2,1.174,3,0.994,4,0.994,5,0.691,6,2.75,7,0.691,8,1.421,9,3.721,10,1.619,11,0.063,12,1.174,13,3.483,14,1.174,15,1.421,16,1.204,17,0.835,18,1.796,19,2.75,20,0.994,21,0.994,22,1.907,23,1.907,24,1.174,25,3.483,26,0.052,27,0.052]],["title/modules/AppModule.html",[28,1.673,29,1.407]],["body/modules/AppModule.html",[1,2.28,2,1.264,3,0.825,4,0.825,5,0.574,11,0.064,16,1.394,17,0.693,18,1.853,19,2.282,20,0.825,21,0.825,26,0.046,27,0.046,28,2.711,29,2.644,30,1.882,31,1.582,32,2.282,33,2.282,34,1.582,35,3.288,36,2.282,37,2.282,38,2.282,39,1.577,40,2.962,41,2.282,42,2.282,43,2.89,44,2.28,45,2.28,46,2.28,47,2.28,48,2.89,49,3.751,50,1.882,51,2.89,52,1.882,53,2.89,54,2.89,55,2.89,56,2.89,57,2.89,58,2.89,59,2.89,60,2.89,61,2.89,62,2.89]],["title/injectables/AppService.html",[18,1.018,63,1.195]],["body/injectables/AppService.html",[3,1.027,4,1.027,5,0.714,7,0.714,8,1.449,9,3.762,11,0.062,12,1.213,14,1.213,15,1.449,16,1.027,17,0.863,18,1.703,20,1.027,21,1.027,24,1.213,26,0.053,27,0.053,63,1.999,64,2.343,65,2.842,66,3.599,67,3.599,68,3.599]],["title/controllers/CommentsController.html",[0,0.414,45,1.407]],["body/controllers/CommentsController.html",[0,0.237,2,0.497,3,0.421,4,0.421,5,0.293,7,0.293,8,0.779,10,1.629,11,0.064,12,1.181,14,1.426,15,1.547,16,0.66,17,0.353,20,0.421,21,0.421,24,1.181,26,0.028,27,0.028,45,1.265,69,0.96,70,0.685,71,4.231,72,2.113,73,2.311,74,2.311,75,2.311,76,2.311,77,2.311,78,1.475,79,1.56,80,1.475,81,1.504,82,1.547,83,4.898,84,1.629,85,1.629,86,1.387,87,1.629,88,1.387,89,4.136,90,2.035,91,1.629,92,1.504,93,2.317,94,1.475,95,1.265,96,1.475,97,1.918,98,2.674,99,1.504,100,1.475,101,1.825,102,1.475,103,1.766,104,1.475,105,2.311,106,1.475,107,2.127,108,2.1,109,1.504,110,1.504,111,1.475,112,1.265,113,1.475,114,2.1,115,1.825,116,1.504,117,0.807,118,1.806,119,1.074,120,1.504,121,0.96,122,1.504,123,0.96,124,1.728,125,1.5,126,1.475,127,0.96,128,1.164,129,0.96,130,1.918,131,1.475,132,2.281,133,1.629,134,1.475,135,2.25,136,2.264,137,2.85,138,2.42,139,2.547,140,2.281,141,2.127,142,3.504,143,1.855,144,1.475,145,1.475,146,1.475,147,1.475,148,0.96,149,1.475,150,2.311,151,1.475,152,1.825,153,1.475,154,2.311,155,1.475,156,1.825,157,1.825,158,1.504,159,1.825,160,1.475,161,2.311,162,1.475]],["title/controllers/GameObjectsController.html",[0,0.414,47,1.407]],["body/controllers/GameObjectsController.html",[0,0.451,2,0.484,3,0.41,4,0.41,5,0.45,7,0.285,8,0.763,10,1.479,11,0.064,12,1.072,14,1.344,15,1.624,16,0.8,17,0.344,20,0.41,21,0.41,22,0.787,23,0.787,24,1.167,26,0.028,27,0.028,39,0.945,47,1.24,52,0.936,70,1.303,72,2.024,79,1.535,81,0.936,82,1.344,84,1.479,85,1.479,86,1.26,87,1.479,88,1.371,90,1.741,91,1.479,92,1.474,93,2.521,95,1.24,97,1.741,98,2.574,99,1.474,103,0.787,107,2.761,108,2.835,109,1.474,110,2.596,112,1.24,114,1.825,116,1.474,117,0.787,118,1.907,119,2.054,120,2.253,121,0.936,124,1.853,130,1.741,132,2.071,133,1.709,136,1.741,140,2.071,141,1.741,143,2.071,163,1.135,164,1.437,165,2.265,166,3.848,167,3.987,168,2.903,169,2.265,170,2.803,171,2.265,172,2.803,173,1.437,174,1.437,175,2.265,176,3.677,177,1.788,178,3.677,179,1.437,180,1.437,181,1.788,182,1.437,183,1.437,184,1.788,185,1.437,186,1.437,187,1.788,188,1.135,189,1.135,190,0.936,191,1.437,192,1.437,193,2.671,194,1.437,195,1.437,196,2.265,197,2.253,198,1.788,199,2.512,200,2.512,201,1.437,202,1.437,203,0.936,204,1.135,205,2.265,206,1.135,207,1.135,208,1.135,209,1.135,210,0.936,211,0.936,212,1.135,213,1.135,214,1.788,215,1.788,216,2.265,217,1.135,218,1.437]],["title/controllers/GamesController.html",[0,0.414,44,1.407]],["body/controllers/GamesController.html",[0,0.368,2,0.491,3,0.416,4,0.416,5,0.289,7,0.289,8,0.771,10,1.619,11,0.064,12,1.174,14,1.588,15,1.473,16,0.653,17,0.349,20,0.416,21,0.653,24,1.174,26,0.028,27,0.028,44,1.548,70,0.677,72,2.108,79,1.548,81,1.49,82,1.473,84,1.489,85,1.489,86,1.269,87,1.489,88,1.67,90,2.024,91,1.619,92,2.086,93,2.193,95,1.253,97,1.548,98,2.564,99,2.086,101,1.807,103,1.253,107,2.685,112,1.253,114,1.49,115,1.15,116,2.086,117,0.797,118,1.719,119,1.064,120,2.407,121,0.948,122,1.49,123,0.948,124,1.064,125,1.489,127,0.948,128,1.15,129,0.948,130,2.483,132,2.267,133,1.619,135,2.232,136,2.193,138,2.267,139,2.232,140,2.267,141,2.117,143,1.841,152,1.807,156,1.807,157,1.807,158,1.49,159,1.807,168,1.15,197,2.267,199,2.75,200,2.75,219,0.948,220,2.827,221,2.827,222,3.483,223,2.827,224,2.827,225,1.456,226,1.456,227,4.12,228,4.216,229,1.456,230,1.456,231,1.456,232,1.456,233,1.456,234,1.456,235,1.456,236,1.456,237,1.456,238,1.456,239,1.456,240,3.483,241,3.483,242,3.483,243,1.456,244,1.456,245,1.456,246,2.827,247,1.456,248,1.456,249,1.456,250,1.456,251,1.456,252,1.456]],["title/injectables/R2Service.html",[39,0.866,63,1.195]],["body/injectables/R2Service.html",[3,0.318,4,0.318,5,0.92,7,0.221,8,0.622,11,0.064,12,1.168,14,1.306,15,1.669,16,0.783,17,0.267,20,0.318,21,0.318,22,0.61,23,1.292,24,1.168,26,0.023,27,0.023,39,0.924,50,0.726,63,0.858,64,0.726,70,1.8,72,2.03,82,1.306,84,1.522,85,2.007,86,1.488,87,1.522,88,1.296,90,0.61,91,1.412,93,0.61,103,1.01,109,1.201,110,2.586,118,1.922,119,1.954,124,1.887,127,0.726,129,2.359,130,1.792,133,1.097,136,0.61,138,0.726,141,0.61,148,0.726,177,1.457,181,1.457,184,1.457,187,1.457,193,3.183,203,1.201,210,0.726,211,2.586,253,0.88,254,1.201,255,2.36,256,3.758,257,1.845,258,1.845,259,1.845,260,2.36,261,2.36,262,1.115,263,3.624,264,1.845,265,1.845,266,1.845,267,1.845,268,3.038,269,3.038,270,1.845,271,2.36,272,1.845,273,1.115,274,4.899,275,3.873,276,3.624,277,3.624,278,2.736,279,1.845,280,1.115,281,2.862,282,1.845,283,1.115,284,1.845,285,3.038,286,1.845,287,1.115,288,3.758,289,3.624,290,1.115,291,1.115,292,1.115,293,1.845,294,2.36,295,1.845,296,1.845,297,1.845,298,0.88,299,0.88,300,2.36,301,2.36,302,1.845,303,1.115,304,1.115,305,1.845,306,1.845,307,1.115,308,1.115,309,1.115,310,1.115,311,1.115,312,1.115,313,1.115,314,1.115,315,1.115,316,2.743,317,1.115,318,1.845,319,1.115,320,1.115,321,1.115,322,1.845,323,1.457,324,1.115,325,1.115,326,3.038,327,2.36,328,1.845,329,3.038,330,1.115,331,1.115,332,1.115,333,1.115,334,1.115,335,1.115,336,1.115,337,1.115,338,1.115,339,1.845,340,1.115,341,1.115,342,1.115,343,1.115,344,1.115,345,1.115,346,1.115,347,1.115,348,1.115]],["title/controllers/WinConditionsController.html",[0,0.414,46,1.407]],["body/controllers/WinConditionsController.html",[0,0.493,2,0.724,3,0.613,4,0.613,5,0.608,7,0.426,8,1.033,10,1.81,11,0.064,12,1.313,14,1.313,15,1.67,16,1.02,17,0.515,20,0.613,21,0.613,22,1.176,23,1.176,24,1.388,26,0.038,27,0.038,39,1.204,46,1.678,52,1.399,70,1.66,72,2.209,79,1.956,84,1.81,85,1.81,86,1.542,87,1.81,91,1.81,95,1.678,97,1.176,98,2.344,107,2.132,108,2.932,112,1.678,117,1.176,118,0.999,119,2.187,124,2.094,133,1.66,188,1.697,189,1.697,190,1.399,193,2.984,197,2.68,198,2.42,203,1.399,204,1.697,206,1.697,207,1.697,208,1.697,209,1.697,210,1.399,211,1.399,212,1.697,213,1.697,214,2.42,215,2.42,217,1.697,349,1.697,350,2.149,351,3.064,352,3.572,353,3.064,354,3.572,355,2.149,356,2.149,357,2.149,358,2.149,359,2.149,360,2.149,361,2.149,362,2.149,363,2.149,364,2.149,365,2.149,366,2.149,367,2.149,368,2.149,369,2.149,370,3.064,371,3.064,372,2.149]],["title/coverage.html",[373,2.259]],["body/coverage.html",[0,0.763,1,1.786,5,0.648,6,2.576,11,0.062,18,1.292,26,0.05,27,0.05,34,1.786,39,1.1,44,1.786,45,1.786,46,1.786,47,1.786,63,1.883,65,2.576,69,2.637,82,1.1,86,1.292,125,1.883,148,3.187,163,2.576,219,2.637,253,2.576,349,2.576,373,2.124,374,3.263,375,3.263,376,3.263,377,4.051,378,3.263,379,3.263,380,4.051,381,4.406,382,3.263,383,3.263,384,3.263,385,2.576,386,3.263,387,3.263,388,3.263,389,3.263,390,3.263,391,3.263]],["title/dependencies.html",[31,1.687,392,1.709]],["body/dependencies.html",[11,0.063,17,0.857,26,0.053,27,0.053,31,1.958,50,2.329,123,2.329,190,2.329,278,2.824,298,3.383,299,2.824,393,3.577,394,3.577,395,3.577,396,3.577,397,3.577,398,3.577,399,3.577,400,4.285,401,3.577,402,3.577,403,3.577,404,3.577,405,3.577,406,3.577,407,3.577,408,3.577,409,3.577]],["title/miscellaneous/functions.html",[410,1.185,411,2.432]],["body/miscellaneous/functions.html",[7,0.778,11,0.056,26,0.056,27,0.056,34,2.609,385,3.094,410,2.146,411,3.094,412,3.919]],["title/index.html",[7,0.43,413,2.164,414,2.164]],["body/index.html",[5,0.724,11,0.062,26,0.045,27,0.045,82,0.933,88,1.097,125,2.15,158,1.803,281,2.186,323,2.186,373,1.803,415,2.769,416,2.769,417,3.647,418,2.769,419,2.769,420,2.769,421,2.769,422,2.769,423,2.769,424,2.769,425,2.769,426,2.769,427,2.769,428,2.769,429,4.925,430,2.186,431,3.647,432,2.769,433,2.769,434,2.769,435,2.769,436,2.769,437,2.769,438,2.769,439,2.769,440,2.769,441,3.647,442,4.078,443,2.769,444,2.769,445,2.769,446,2.769,447,4.335,448,4.335,449,3.647,450,3.647,451,2.769,452,4.335,453,2.769,454,2.769,455,2.769,456,3.647,457,2.769,458,2.769,459,2.769,460,3.647,461,2.769,462,2.769,463,2.769,464,2.769,465,4.078,466,2.769,467,2.769,468,2.769,469,2.769,470,2.769,471,2.769,472,2.769,473,3.647,474,2.769,475,2.769,476,2.769,477,2.769,478,2.769,479,3.647,480,4.078,481,2.769,482,3.647,483,2.769,484,2.769,485,2.769]],["title/modules.html",[30,2.259]],["body/modules.html",[11,0.056,26,0.056,27,0.056,29,2.16,30,2.568,430,3.115,486,3.945,487,3.945,488,3.945]],["title/overview.html",[489,2.74]],["body/overview.html",[2,1.217,11,0.059,18,1.824,26,0.053,27,0.053,28,2.804,29,2.708,31,1.976,32,2.85,33,2.85,34,1.976,35,2.85,36,2.85,37,2.85,38,2.85,39,1.552,40,3.401,41,2.85,42,2.85,64,2.35,489,2.85,490,3.61,491,3.61,492,3.61]],["title/properties.html",[254,2.005,392,1.709]],["body/properties.html",[11,0.062,26,0.055,27,0.055,88,1.537,254,2.526,493,3.881,494,3.881,495,3.881,496,3.881,497,3.881]],["title/miscellaneous/variables.html",[410,1.185,498,2.432]],["body/miscellaneous/variables.html",[7,0.746,11,0.059,26,0.054,27,0.054,69,2.446,82,1.487,122,2.872,125,2.246,219,2.446,410,2.057,498,2.967,499,3.758,500,3.758,501,4.412,502,4.412]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/R2Service.html":{},"coverage.html":{}}}],["0.0.1",{"_index":494,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":490,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["10.3.8",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":492,"title":{},"body":{"overview.html":{}}}],["3.2.2",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["3.587.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["3.588.0",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":491,"title":{},"body":{"overview.html":{}}}],["5.14.0",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["9.0.1",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["accesskeyid",{"_index":309,"title":{},"body":{"injectables/R2Service.html":{}}}],["add",{"_index":324,"title":{},"body":{"injectables/R2Service.html":{}}}],["already",{"_index":469,"title":{},"body":{"index.html":{}}}],["any).headers",{"_index":318,"title":{},"body":{"injectables/R2Service.html":{}}}],["apitoken",{"_index":302,"title":{},"body":{"injectables/R2Service.html":{}}}],["app",{"_index":465,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":474,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":328,"title":{},"body":{"injectables/R2Service.html":{}}}],["applications",{"_index":423,"title":{},"body":{"index.html":{}}}],["apply",{"_index":462,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":315,"title":{},"body":{"injectables/R2Service.html":{}}}],["args.request",{"_index":316,"title":{},"body":{"injectables/R2Service.html":{}}}],["artifacts",{"_index":459,"title":{},"body":{"index.html":{}}}],["associated",{"_index":167,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["async",{"_index":72,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["author",{"_index":497,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":319,"title":{},"body":{"injectables/R2Service.html":{}}}],["auto",{"_index":306,"title":{},"body":{"injectables/R2Service.html":{}}}],["available",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":133,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["aws",{"_index":298,"title":{},"body":{"injectables/R2Service.html":{},"dependencies.html":{}}}],["bearer",{"_index":320,"title":{},"body":{"injectables/R2Service.html":{}}}],["blob",{"_index":289,"title":{},"body":{"injectables/R2Service.html":{}}}],["body",{"_index":119,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":488,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":486,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":274,"title":{},"body":{"injectables/R2Service.html":{}}}],["buffer",{"_index":211,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["build",{"_index":323,"title":{},"body":{"injectables/R2Service.html":{},"index.html":{}}}],["building",{"_index":418,"title":{},"body":{"index.html":{}}}],["catch",{"_index":140,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["check",{"_index":470,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":342,"title":{},"body":{"injectables/R2Service.html":{}}}],["chunks",{"_index":340,"title":{},"body":{"injectables/R2Service.html":{}}}],["chunks.push(chunk",{"_index":343,"title":{},"body":{"injectables/R2Service.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":158,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"index.html":{}}}],["command",{"_index":326,"title":{},"body":{"injectables/R2Service.html":{}}}],["commands",{"_index":477,"title":{},"body":{"index.html":{}}}],["comment",{"_index":83,"title":{},"body":{"controllers/CommentsController.html":{}}}],["commentdata",{"_index":89,"title":{},"body":{"controllers/CommentsController.html":{}}}],["comments",{"_index":71,"title":{},"body":{"controllers/CommentsController.html":{}}}],["comments.length",{"_index":147,"title":{},"body":{"controllers/CommentsController.html":{}}}],["comments/comments.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["commentscontroller",{"_index":45,"title":{"controllers/CommentsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommentsController.html":{},"coverage.html":{}}}],["compose",{"_index":442,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":263,"title":{},"body":{"injectables/R2Service.html":{}}}],["configuration",{"_index":270,"title":{},"body":{"injectables/R2Service.html":{}}}],["const",{"_index":124,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["constructor",{"_index":127,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["constructor(configservice",{"_index":262,"title":{},"body":{"injectables/R2Service.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["constructs",{"_index":265,"title":{},"body":{"injectables/R2Service.html":{}}}],["container",{"_index":449,"title":{},"body":{"index.html":{}}}],["content",{"_index":281,"title":{},"body":{"injectables/R2Service.html":{},"index.html":{}}}],["contenttype",{"_index":327,"title":{},"body":{"injectables/R2Service.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{}}}],["controller('comments",{"_index":126,"title":{},"body":{"controllers/CommentsController.html":{}}}],["controller('games",{"_index":239,"title":{},"body":{"controllers/GamesController.html":{}}}],["controller('games/:gameid/gameobjects",{"_index":191,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["controller('games/:gameid/winconditions",{"_index":364,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{},"overview.html":{}}}],["convert",{"_index":210,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["copy",{"_index":432,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":373,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":81,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["createcomment",{"_index":73,"title":{},"body":{"controllers/CommentsController.html":{}}}],["createcomment(@body",{"_index":149,"title":{},"body":{"controllers/CommentsController.html":{}}}],["createcomment(commentdata",{"_index":78,"title":{},"body":{"controllers/CommentsController.html":{}}}],["created",{"_index":92,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["creategame",{"_index":220,"title":{},"body":{"controllers/GamesController.html":{}}}],["creategame(@body",{"_index":247,"title":{},"body":{"controllers/GamesController.html":{}}}],["creategame(gamedata",{"_index":225,"title":{},"body":{"controllers/GamesController.html":{}}}],["creategameobject",{"_index":169,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["creategameobject(@param('gameid",{"_index":192,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["creategameobject(gameid",{"_index":173,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["creates",{"_index":175,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["createwincondition",{"_index":351,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["createwincondition(@param('gameid",{"_index":365,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["createwincondition(gameid",{"_index":355,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["credentials",{"_index":268,"title":{},"body":{"injectables/R2Service.html":{}}}],["data",{"_index":90,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["data.contents",{"_index":331,"title":{},"body":{"injectables/R2Service.html":{}}}],["data.contents.length",{"_index":332,"title":{},"body":{"injectables/R2Service.html":{}}}],["data.contents.map((item",{"_index":335,"title":{},"body":{"injectables/R2Service.html":{}}}],["database",{"_index":455,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["default",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["delete",{"_index":97,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["delete(':id",{"_index":95,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["deletecomment",{"_index":74,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deletecomment(@param('id",{"_index":160,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deletecomment(id",{"_index":94,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deleted",{"_index":99,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["deletedcomment",{"_index":161,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deletefile",{"_index":257,"title":{},"body":{"injectables/R2Service.html":{}}}],["deletefile(bucket",{"_index":272,"title":{},"body":{"injectables/R2Service.html":{}}}],["deletegame",{"_index":221,"title":{},"body":{"controllers/GamesController.html":{}}}],["deletegame(@param('id",{"_index":251,"title":{},"body":{"controllers/GamesController.html":{}}}],["deletegame(id",{"_index":229,"title":{},"body":{"controllers/GamesController.html":{}}}],["deletegameobject",{"_index":170,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["deletegameobject(gameid",{"_index":179,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["deleteobjectcommand",{"_index":296,"title":{},"body":{"injectables/R2Service.html":{}}}],["deletes",{"_index":181,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{}}}],["deletewincondition",{"_index":352,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["deletewincondition(gameid",{"_index":357,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":88,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"index.html":{},"properties.html":{}}}],["devrunning",{"_index":464,"title":{},"body":{"index.html":{}}}],["docker",{"_index":429,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":483,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":419,"title":{},"body":{"index.html":{}}}],["end",{"_index":482,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":269,"title":{},"body":{"injectables/R2Service.html":{}}}],["ensure",{"_index":441,"title":{},"body":{"index.html":{}}}],["env",{"_index":434,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":433,"title":{},"body":{"index.html":{}}}],["error",{"_index":141,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["error('nosuchkey",{"_index":333,"title":{},"body":{"injectables/R2Service.html":{}}}],["error.code",{"_index":156,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["error.message",{"_index":200,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["example",{"_index":447,"title":{},"body":{"index.html":{}}}],["exist",{"_index":334,"title":{},"body":{"injectables/R2Service.html":{}}}],["existing",{"_index":115,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["failed",{"_index":199,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":285,"title":{},"body":{"injectables/R2Service.html":{}}}],["filter",{"_index":286,"title":{},"body":{"injectables/R2Service.html":{}}}],["follow",{"_index":445,"title":{},"body":{"index.html":{}}}],["following",{"_index":476,"title":{},"body":{"index.html":{}}}],["found",{"_index":138,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["framework",{"_index":417,"title":{},"body":{"index.html":{}}}],["function",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":411,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":107,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["gamedata",{"_index":227,"title":{},"body":{"controllers/GamesController.html":{}}}],["gameid",{"_index":108,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["gameid}/gameobjects",{"_index":202,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["gameid}/gameobjects/${id",{"_index":216,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["gameid}/gameobjects/${uuidv4",{"_index":194,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["gameid}/winconditions",{"_index":369,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["gameid}/winconditions/${id",{"_index":371,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["gameid}/winconditions/${uuidv4",{"_index":366,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["gameobjects",{"_index":205,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["gameobjects/gameobjects.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["gameobjectscontroller",{"_index":47,"title":{"controllers/GameObjectsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/GameObjectsController.html":{},"coverage.html":{}}}],["games",{"_index":197,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["games/:gameid/gameobjects",{"_index":164,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["games/:gameid/winconditions",{"_index":350,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["games/games.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["gamescontroller",{"_index":44,"title":{"controllers/GamesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/GamesController.html":{},"coverage.html":{}}}],["generate",{"_index":458,"title":{},"body":{"index.html":{}}}],["generateexample",{"_index":461,"title":{},"body":{"index.html":{}}}],["generation",{"_index":457,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":101,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["get('bygame/:gameid",{"_index":105,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getallgameobjectsbygame",{"_index":171,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["getallgameobjectsbygame(@param('gameid",{"_index":201,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["getallgameobjectsbygame(gameid",{"_index":182,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["getallgames",{"_index":222,"title":{},"body":{"controllers/GamesController.html":{}}}],["getallwinconditionsbygame",{"_index":353,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["getallwinconditionsbygame(@param('gameid",{"_index":368,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["getallwinconditionsbygame(gameid",{"_index":359,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["getcommentbyid",{"_index":75,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getcommentbyid(@param('id",{"_index":131,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getcommentbyid(id",{"_index":100,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getcommentsbygameid",{"_index":76,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getcommentsbygameid(@param('gameid",{"_index":144,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getcommentsbygameid(gameid",{"_index":104,"title":{},"body":{"controllers/CommentsController.html":{}}}],["getfile",{"_index":258,"title":{},"body":{"injectables/R2Service.html":{}}}],["getfile(bucket",{"_index":279,"title":{},"body":{"injectables/R2Service.html":{}}}],["getgamebyid",{"_index":223,"title":{},"body":{"controllers/GamesController.html":{}}}],["getgamebyid(@param('id",{"_index":244,"title":{},"body":{"controllers/GamesController.html":{}}}],["getgamebyid(id",{"_index":232,"title":{},"body":{"controllers/GamesController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getobjectcommand",{"_index":295,"title":{},"body":{"injectables/R2Service.html":{}}}],["getting",{"_index":413,"title":{"index.html":{}},"body":{}}],["given",{"_index":275,"title":{},"body":{"injectables/R2Service.html":{}}}],["globally",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["guide",{"_index":446,"title":{},"body":{"index.html":{}}}],["handler",{"_index":242,"title":{},"body":{"controllers/GamesController.html":{}}}],["handling",{"_index":236,"title":{},"body":{"controllers/GamesController.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["httpexception",{"_index":120,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["httpexception('comment",{"_index":137,"title":{},"body":{"controllers/CommentsController.html":{}}}],["httpexception('game",{"_index":246,"title":{},"body":{"controllers/GamesController.html":{}}}],["httpexception(error.message",{"_index":142,"title":{},"body":{"controllers/CommentsController.html":{}}}],["httpstatus",{"_index":121,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["httpstatus.bad_request",{"_index":152,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["httpstatus.internal_server_error",{"_index":143,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["httpstatus.not_found",{"_index":139,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["id",{"_index":98,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["identifier",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["ignored",{"_index":435,"title":{},"body":{"index.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["informations",{"_index":440,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":454,"title":{},"body":{"index.html":{}}}],["initializes",{"_index":267,"title":{},"body":{"injectables/R2Service.html":{}}}],["inject",{"_index":128,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["injectable",{"_index":63,"title":{"injectables/AppService.html":{},"injectables/R2Service.html":{}},"body":{"injectables/AppService.html":{},"injectables/R2Service.html":{},"coverage.html":{}}}],["injectables",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/R2Service.html":{},"overview.html":{}}}],["inside",{"_index":436,"title":{},"body":{"index.html":{}}}],["installation",{"_index":431,"title":{},"body":{"index.html":{}}}],["installed",{"_index":443,"title":{},"body":{"index.html":{}}}],["instance",{"_index":266,"title":{},"body":{"injectables/R2Service.html":{}}}],["isglobal",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["item.key",{"_index":336,"title":{},"body":{"injectables/R2Service.html":{}}}],["json",{"_index":213,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["json.parse(file.body.tostring",{"_index":209,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["json.stringify(body",{"_index":198,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["key",{"_index":193,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["keys",{"_index":203,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["keys.map(async",{"_index":207,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":495,"title":{},"body":{"properties.html":{}}}],["list",{"_index":109,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{}}}],["listfiles",{"_index":259,"title":{},"body":{"injectables/R2Service.html":{}}}],["listfiles(bucket",{"_index":282,"title":{},"body":{"injectables/R2Service.html":{}}}],["listobjectsv2command",{"_index":297,"title":{},"body":{"injectables/R2Service.html":{}}}],["lists",{"_index":284,"title":{},"body":{"injectables/R2Service.html":{}}}],["make",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["manage",{"_index":165,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":240,"title":{},"body":{"controllers/GamesController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["middleware",{"_index":325,"title":{},"body":{"injectables/R2Service.html":{}}}],["migrate",{"_index":463,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":456,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":410,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":439,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["need",{"_index":453,"title":{},"body":{"index.html":{}}}],["nest",{"_index":424,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/R2Service.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":82,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcomment",{"_index":150,"title":{},"body":{"controllers/CommentsController.html":{}}}],["next",{"_index":314,"title":{},"body":{"injectables/R2Service.html":{}}}],["next(args",{"_index":321,"title":{},"body":{"injectables/R2Service.html":{}}}],["node.js",{"_index":416,"title":{},"body":{"index.html":{}}}],["now",{"_index":428,"title":{},"body":{"index.html":{}}}],["npm",{"_index":480,"title":{},"body":{"index.html":{}}}],["npx",{"_index":460,"title":{},"body":{"index.html":{}}}],["object",{"_index":93,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["objects",{"_index":166,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["operation",{"_index":178,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["optional",{"_index":87,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":489,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2025",{"_index":157,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["package",{"_index":392,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":118,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["param('gameid",{"_index":214,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["param('id",{"_index":215,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["parse",{"_index":212,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["parseint(gameid",{"_index":146,"title":{},"body":{"controllers/CommentsController.html":{}}}],["parseint(id",{"_index":135,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["path",{"_index":276,"title":{},"body":{"injectables/R2Service.html":{}}}],["plock",{"_index":196,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["post",{"_index":79,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["prefix",{"_index":70,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["prisma",{"_index":125,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.comment.create",{"_index":151,"title":{},"body":{"controllers/CommentsController.html":{}}}],["prisma.comment.delete",{"_index":162,"title":{},"body":{"controllers/CommentsController.html":{}}}],["prisma.comment.findmany",{"_index":145,"title":{},"body":{"controllers/CommentsController.html":{}}}],["prisma.comment.findunique",{"_index":134,"title":{},"body":{"controllers/CommentsController.html":{}}}],["prisma.comment.update",{"_index":155,"title":{},"body":{"controllers/CommentsController.html":{}}}],["prisma.game.create",{"_index":248,"title":{},"body":{"controllers/GamesController.html":{}}}],["prisma.game.delete",{"_index":252,"title":{},"body":{"controllers/GamesController.html":{}}}],["prisma.game.findmany",{"_index":243,"title":{},"body":{"controllers/GamesController.html":{}}}],["prisma.game.findunique",{"_index":245,"title":{},"body":{"controllers/GamesController.html":{}}}],["prisma.game.update",{"_index":250,"title":{},"body":{"controllers/GamesController.html":{}}}],["prisma/client",{"_index":123,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":122,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":255,"title":{},"body":{"injectables/R2Service.html":{}}}],["progressive",{"_index":415,"title":{},"body":{"index.html":{}}}],["promise",{"_index":130,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["promise((resolve",{"_index":338,"title":{},"body":{"injectables/R2Service.html":{}}}],["promise.all",{"_index":206,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["properties",{"_index":254,"title":{"properties.html":{}},"body":{"injectables/R2Service.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pstest",{"_index":472,"title":{},"body":{"index.html":{}}}],["put",{"_index":117,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["put(':id",{"_index":112,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"controllers/WinConditionsController.html":{}}}],["putobjectcommand",{"_index":294,"title":{},"body":{"injectables/R2Service.html":{}}}],["r2",{"_index":271,"title":{},"body":{"injectables/R2Service.html":{}}}],["r2service",{"_index":39,"title":{"injectables/R2Service.html":{}},"body":{"modules/AppModule.html":{},"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{},"overview.html":{}}}],["readable",{"_index":300,"title":{},"body":{"injectables/R2Service.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["record",{"_index":159,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{}}}],["reflect",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":305,"title":{},"body":{"injectables/R2Service.html":{}}}],["reject",{"_index":339,"title":{},"body":{"injectables/R2Service.html":{}}}],["related",{"_index":237,"title":{},"body":{"controllers/GamesController.html":{}}}],["repository",{"_index":427,"title":{},"body":{"index.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve(buffer.concat(chunks",{"_index":346,"title":{},"body":{"injectables/R2Service.html":{}}}],["resolves",{"_index":228,"title":{},"body":{"controllers/GamesController.html":{}}}],["response",{"_index":277,"title":{},"body":{"injectables/R2Service.html":{}}}],["response.contenttype",{"_index":348,"title":{},"body":{"injectables/R2Service.html":{}}}],["result",{"_index":176,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":103,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["retrieves",{"_index":184,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["route",{"_index":241,"title":{},"body":{"controllers/GamesController.html":{}}}],["routes",{"_index":238,"title":{},"body":{"controllers/GamesController.html":{}}}],["run",{"_index":448,"title":{},"body":{"index.html":{}}}],["running",{"_index":452,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":278,"title":{},"body":{"injectables/R2Service.html":{},"dependencies.html":{}}}],["s3client",{"_index":256,"title":{},"body":{"injectables/R2Service.html":{}}}],["scalable",{"_index":420,"title":{},"body":{"index.html":{}}}],["sdk/client",{"_index":299,"title":{},"body":{"injectables/R2Service.html":{},"dependencies.html":{}}}],["sdk/middleware",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["secretaccesskey",{"_index":311,"title":{},"body":{"injectables/R2Service.html":{}}}],["server",{"_index":421,"title":{},"body":{"index.html":{}}}],["service",{"_index":129,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["services/r2/r2.service",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["set",{"_index":466,"title":{},"body":{"index.html":{}}}],["side",{"_index":422,"title":{},"body":{"index.html":{}}}],["signing",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["specific",{"_index":168,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["specified",{"_index":110,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{}}}],["specify",{"_index":438,"title":{},"body":{"index.html":{}}}],["src/.../comments.controller.ts",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../games.controller.ts",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/comments/comments.controller.ts",{"_index":69,"title":{},"body":{"controllers/CommentsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/comments/comments.controller.ts:107",{"_index":96,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/comments/comments.controller.ts:26",{"_index":102,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/comments/comments.controller.ts:46",{"_index":106,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/comments/comments.controller.ts:69",{"_index":80,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/comments/comments.controller.ts:85",{"_index":113,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/gameobjects/gameobjects.controller.ts",{"_index":163,"title":{},"body":{"controllers/GameObjectsController.html":{},"coverage.html":{}}}],["src/gameobjects/gameobjects.controller.ts:101",{"_index":186,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["src/gameobjects/gameobjects.controller.ts:29",{"_index":174,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["src/gameobjects/gameobjects.controller.ts:51",{"_index":183,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["src/gameobjects/gameobjects.controller.ts:78",{"_index":180,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["src/games/games.controller.ts",{"_index":219,"title":{},"body":{"controllers/GamesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/games/games.controller.ts:116",{"_index":230,"title":{},"body":{"controllers/GamesController.html":{}}}],["src/games/games.controller.ts:30",{"_index":231,"title":{},"body":{"controllers/GamesController.html":{}}}],["src/games/games.controller.ts:48",{"_index":233,"title":{},"body":{"controllers/GamesController.html":{}}}],["src/games/games.controller.ts:72",{"_index":226,"title":{},"body":{"controllers/GamesController.html":{}}}],["src/games/games.controller.ts:91",{"_index":235,"title":{},"body":{"controllers/GamesController.html":{}}}],["src/main.ts",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/r2/r2.service.ts",{"_index":253,"title":{},"body":{"injectables/R2Service.html":{},"coverage.html":{}}}],["src/services/r2/r2.service.ts:122",{"_index":273,"title":{},"body":{"injectables/R2Service.html":{}}}],["src/services/r2/r2.service.ts:137",{"_index":290,"title":{},"body":{"injectables/R2Service.html":{}}}],["src/services/r2/r2.service.ts:14",{"_index":264,"title":{},"body":{"injectables/R2Service.html":{}}}],["src/services/r2/r2.service.ts:55",{"_index":292,"title":{},"body":{"injectables/R2Service.html":{}}}],["src/services/r2/r2.service.ts:76",{"_index":283,"title":{},"body":{"injectables/R2Service.html":{}}}],["src/services/r2/r2.service.ts:94",{"_index":280,"title":{},"body":{"injectables/R2Service.html":{}}}],["src/winconditions/winconditions.controller.ts",{"_index":349,"title":{},"body":{"controllers/WinConditionsController.html":{},"coverage.html":{}}}],["src/winconditions/winconditions.controller.ts:19",{"_index":356,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["src/winconditions/winconditions.controller.ts:25",{"_index":360,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["src/winconditions/winconditions.controller.ts:39",{"_index":358,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["src/winconditions/winconditions.controller.ts:48",{"_index":362,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["start",{"_index":468,"title":{},"body":{"index.html":{}}}],["started",{"_index":414,"title":{"index.html":{}},"body":{}}],["starter",{"_index":426,"title":{},"body":{"index.html":{}}}],["statements",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":471,"title":{},"body":{"index.html":{}}}],["step",{"_index":322,"title":{},"body":{"injectables/R2Service.html":{}}}],["stream",{"_index":301,"title":{},"body":{"injectables/R2Service.html":{}}}],["stream.on('data",{"_index":341,"title":{},"body":{"injectables/R2Service.html":{}}}],["stream.on('end",{"_index":345,"title":{},"body":{"injectables/R2Service.html":{}}}],["stream.on('error",{"_index":344,"title":{},"body":{"injectables/R2Service.html":{}}}],["streamtobuffer",{"_index":337,"title":{},"body":{"injectables/R2Service.html":{}}}],["streamtobuffer(body",{"_index":347,"title":{},"body":{"injectables/R2Service.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["sudo",{"_index":450,"title":{},"body":{"index.html":{}}}],["support",{"_index":430,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":487,"title":{},"body":{"modules.html":{}}}],["system",{"_index":444,"title":{},"body":{"index.html":{}}}],["table",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":473,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":485,"title":{},"body":{"index.html":{}}}],["test:e2eexample",{"_index":484,"title":{},"body":{"index.html":{}}}],["testexample",{"_index":481,"title":{},"body":{"index.html":{}}}],["tests",{"_index":479,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('r2_access_key_id",{"_index":310,"title":{},"body":{"injectables/R2Service.html":{}}}],["this.configservice.get('r2_api_token",{"_index":303,"title":{},"body":{"injectables/R2Service.html":{}}}],["this.configservice.get('r2_endpoint",{"_index":308,"title":{},"body":{"injectables/R2Service.html":{}}}],["this.configservice.get('r2_secret_access_key",{"_index":312,"title":{},"body":{"injectables/R2Service.html":{}}}],["this.r2service.deletefile('plock",{"_index":217,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["this.r2service.getfile('plock",{"_index":208,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["this.r2service.listfiles('plock",{"_index":204,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["this.r2service.updatefile",{"_index":218,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["this.r2service.updatefile('plock",{"_index":372,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["this.r2service.uploadfile",{"_index":195,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["this.r2service.uploadfile('plock",{"_index":367,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["this.s3client",{"_index":304,"title":{},"body":{"injectables/R2Service.html":{}}}],["this.s3client.middlewarestack.add",{"_index":313,"title":{},"body":{"injectables/R2Service.html":{}}}],["this.s3client.send(command",{"_index":329,"title":{},"body":{"injectables/R2Service.html":{}}}],["throw",{"_index":136,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{}}}],["throws",{"_index":330,"title":{},"body":{"injectables/R2Service.html":{}}}],["true",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["try",{"_index":132,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["type",{"_index":86,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{}}}],["typeof",{"_index":317,"title":{},"body":{"injectables/R2Service.html":{}}}],["typescript",{"_index":425,"title":{},"body":{"index.html":{}}}],["uint8array",{"_index":288,"title":{},"body":{"injectables/R2Service.html":{}}}],["unit",{"_index":478,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":91,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{},"injectables/R2Service.html":{},"controllers/WinConditionsController.html":{}}}],["unlicensed",{"_index":496,"title":{},"body":{"properties.html":{}}}],["up",{"_index":467,"title":{},"body":{"index.html":{}}}],["update",{"_index":114,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["updatecomment",{"_index":77,"title":{},"body":{"controllers/CommentsController.html":{}}}],["updatecomment(@param('id",{"_index":153,"title":{},"body":{"controllers/CommentsController.html":{}}}],["updatecomment(id",{"_index":111,"title":{},"body":{"controllers/CommentsController.html":{}}}],["updated",{"_index":116,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/GameObjectsController.html":{},"controllers/GamesController.html":{}}}],["updatedcomment",{"_index":154,"title":{},"body":{"controllers/CommentsController.html":{}}}],["updatefile",{"_index":260,"title":{},"body":{"injectables/R2Service.html":{}}}],["updatefile(bucket",{"_index":287,"title":{},"body":{"injectables/R2Service.html":{}}}],["updategame",{"_index":224,"title":{},"body":{"controllers/GamesController.html":{}}}],["updategame(@param('id",{"_index":249,"title":{},"body":{"controllers/GamesController.html":{}}}],["updategame(id",{"_index":234,"title":{},"body":{"controllers/GamesController.html":{}}}],["updategameobject",{"_index":172,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["updategameobject(gameid",{"_index":185,"title":{},"body":{"controllers/GameObjectsController.html":{}}}],["updates",{"_index":187,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{}}}],["updatewincondition",{"_index":354,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["updatewincondition(gameid",{"_index":361,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["upload",{"_index":177,"title":{},"body":{"controllers/GameObjectsController.html":{},"injectables/R2Service.html":{}}}],["uploadfile",{"_index":261,"title":{},"body":{"injectables/R2Service.html":{}}}],["uploadfile(bucket",{"_index":291,"title":{},"body":{"injectables/R2Service.html":{}}}],["uploads",{"_index":293,"title":{},"body":{"injectables/R2Service.html":{}}}],["uponce",{"_index":451,"title":{},"body":{"index.html":{}}}],["use",{"_index":475,"title":{},"body":{"index.html":{}}}],["uses",{"_index":307,"title":{},"body":{"injectables/R2Service.html":{}}}],["uuid",{"_index":190,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":189,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["v4",{"_index":188,"title":{},"body":{"controllers/GameObjectsController.html":{},"controllers/WinConditionsController.html":{}}}],["value",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":493,"title":{},"body":{"properties.html":{}}}],["wincondition",{"_index":363,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["winconditions",{"_index":370,"title":{},"body":{"controllers/WinConditionsController.html":{}}}],["winconditions/winconditions.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["winconditionscontroller",{"_index":46,"title":{"controllers/WinConditionsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/WinConditionsController.html":{},"coverage.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["you'll",{"_index":437,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nR2Service\n\nR2Service\n\nAppModule -->\n\nR2Service->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            R2Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            GamesController\n                        \n                        \n                            CommentsController\n                        \n                        \n                            WinConditionsController\n                        \n                        \n                            GameObjectsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { GamesController } from './games/games.controller';\nimport { R2Service } from './services/r2/r2.service';\nimport { CommentsController } from './comments/comments.controller';\nimport { WinConditionsController } from './winconditions/winconditions.controller';\nimport { GameObjectsController } from './gameobjects/gameobjects.controller';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true, // Make ConfigModule globally available\n    }),\n  ],\n  controllers: [\n    AppController,\n    GamesController,\n    CommentsController,\n    WinConditionsController,\n    GameObjectsController,\n  ],\n  providers: [AppService, R2Service],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentsController.html":{"url":"controllers/CommentsController.html","title":"controller - CommentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comments/comments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                comments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createComment\n                            \n                            \n                                    \n                                    Async\n                                deleteComment\n                            \n                            \n                                    \n                                    Async\n                                getCommentById\n                            \n                            \n                                    \n                                    Async\n                                getCommentsByGameId\n                            \n                            \n                                    \n                                    Async\n                                updateComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createComment(commentData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/comments/comments.controller.ts:69\n                        \n                    \n\n\n            \n                \n                        Create a new comment.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                commentData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data for the new comment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created comment object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteComment(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/comments/comments.controller.ts:107\n                        \n                    \n\n\n            \n                \n                        Delete a comment by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the comment to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The deleted comment object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getCommentById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCommentById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/comments/comments.controller.ts:26\n                        \n                    \n\n\n            \n                \n                        Get a comment by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the comment to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The comment object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getCommentsByGameId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCommentsByGameId(gameId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byGame/:gameId')\n                \n            \n\n                    \n                        \n                            Defined in src/comments/comments.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Get comments by game ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game to retrieve comments for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A list of comments for the specified game.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateComment(id: string, commentData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/comments/comments.controller.ts:85\n                        \n                    \n\n\n            \n                \n                        Update an existing comment by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the comment to update.\n\n\n                                            \n                                        \n                                        \n                                                commentData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the comment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The updated comment object.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Param,\n  Body,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n@Controller('comments')\nexport class CommentsController {\n  constructor() {} // Inject Prisma service\n\n  /**\n   * Get a comment by its ID.\n   * @param {string} id - The ID of the comment to retrieve.\n   * @returns {Promise} The comment object.\n   */\n  @Get(':id')\n  async getCommentById(@Param('id') id: string) {\n    try {\n      const comment = await prisma.comment.findUnique({\n        where: { id: parseInt(id) },\n      });\n      if (!comment) {\n        throw new HttpException('Comment not found', HttpStatus.NOT_FOUND);\n      }\n      return comment;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /**\n   * Get comments by game ID.\n   * @param {string} gameId - The ID of the game to retrieve comments for.\n   * @returns {Promise} A list of comments for the specified game.\n   */\n  @Get('byGame/:gameId')\n  async getCommentsByGameId(@Param('gameId') gameId: string) {\n    try {\n      const comments = await prisma.comment.findMany({\n        where: { gameId: parseInt(gameId) },\n      });\n      if (comments.length === 0) {\n        throw new HttpException(\n          'No comments found for this game',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n      return comments;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /**\n   * Create a new comment.\n   * @param {object} commentData - The data for the new comment.\n   * @returns {Promise} The created comment object.\n   */\n  @Post()\n  async createComment(@Body() commentData: any) {\n    try {\n      const newComment = await prisma.comment.create({ data: commentData });\n      return newComment;\n    } catch (error) {\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Update an existing comment by its ID.\n   * @param {string} id - The ID of the comment to update.\n   * @param {object} commentData - The new data for the comment.\n   * @returns {Promise} The updated comment object.\n   */\n  @Put(':id')\n  async updateComment(@Param('id') id: string, @Body() commentData: any) {\n    try {\n      const updatedComment = await prisma.comment.update({\n        where: { id: parseInt(id) },\n        data: commentData,\n      });\n      return updatedComment;\n    } catch (error) {\n      if (error.code === 'P2025') {\n        // Prisma error code for record not found\n        throw new HttpException('Comment not found', HttpStatus.NOT_FOUND);\n      }\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Delete a comment by its ID.\n   * @param {string} id - The ID of the comment to delete.\n   * @returns {Promise} The deleted comment object.\n   */\n  @Delete(':id')\n  async deleteComment(@Param('id') id: string) {\n    try {\n      const deletedComment = await prisma.comment.delete({\n        where: { id: parseInt(id) },\n      });\n      return deletedComment;\n    } catch (error) {\n      if (error.code === 'P2025') {\n        // Prisma error code for record not found\n        throw new HttpException('Comment not found', HttpStatus.NOT_FOUND);\n      }\n      throw new HttpException(error.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameObjectsController.html":{"url":"controllers/GameObjectsController.html","title":"controller - GameObjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameObjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gameobjects/gameobjects.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                games/:gameId/gameObjects\n            \n\n\n            \n                Description\n            \n            \n                Controller to manage game objects associated with a specific game.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createGameObject\n                            \n                            \n                                    \n                                    Async\n                                deleteGameObject\n                            \n                            \n                                    \n                                    Async\n                                getAllGameObjectsByGame\n                            \n                            \n                                    \n                                    Async\n                                updateGameObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createGameObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGameObject(gameId: string, body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/gameobjects/gameobjects.controller.ts:29\n                        \n                    \n\n\n            \n                \n                        Creates a new game object for a specified game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game.\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the game object to be created.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nThe result of the upload operation.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteGameObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGameObject(gameId: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/gameobjects/gameobjects.controller.ts:78\n                        \n                    \n\n\n            \n                \n                        Deletes a specific game object associated with a specified game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game object to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nThe result of the delete operation.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllGameObjectsByGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllGameObjectsByGame(gameId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/gameobjects/gameobjects.controller.ts:51\n                        \n                    \n\n\n            \n                \n                        Retrieves all game objects associated with a specified game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA list of game objects.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateGameObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateGameObject(gameId: string, id: string, body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/gameobjects/gameobjects.controller.ts:101\n                        \n                    \n\n\n            \n                \n                        Updates a specific game object associated with a specified game.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the game object to be updated.\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the game object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nThe result of the update operation.\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  Body,\n  Put,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { R2Service } from '../services/r2/r2.service';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Controller to manage game objects associated with a specific game.\n */\n@Controller('games/:gameId/gameObjects')\nexport class GameObjectsController {\n  constructor(private readonly r2Service: R2Service) {}\n\n  /**\n   * Creates a new game object for a specified game.\n   * @param {string} gameId - The ID of the game.\n   * @param {any} body - The data of the game object to be created.\n   * @returns {Promise} - The result of the upload operation.\n   */\n  @Post()\n  async createGameObject(@Param('gameId') gameId: string, @Body() body: any) {\n    try {\n      const key = `game-${gameId}/gameObjects/${uuidv4()}`;\n      return await this.r2Service.uploadFile(\n        'plock-games',\n        key,\n        JSON.stringify(body),\n      );\n    } catch (error) {\n      throw new HttpException(\n        `Failed to create game object: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  /**\n   * Retrieves all game objects associated with a specified game.\n   * @param {string} gameId - The ID of the game.\n   * @returns {Promise} - A list of game objects.\n   */\n  @Get()\n  async getAllGameObjectsByGame(@Param('gameId') gameId: string) {\n    try {\n      const prefix = `game-${gameId}/gameObjects/`;\n      const keys = await this.r2Service.listFiles('plock-games', prefix);\n      const gameObjects = await Promise.all(\n        keys.map(async (key) => {\n          const file = await this.r2Service.getFile('plock-games', key);\n          const body = JSON.parse(file.Body.toString()); // Convert Buffer to string and parse JSON\n          return { key, ...body };\n        }),\n      );\n      return gameObjects;\n    } catch (error) {\n      throw new HttpException(\n        `Failed to retrieve game objects: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  /**\n   * Deletes a specific game object associated with a specified game.\n   * @param {string} gameId - The ID of the game.\n   * @param {string} id - The ID of the game object to be deleted.\n   * @returns {Promise} - The result of the delete operation.\n   */\n  @Delete(':id')\n  async deleteGameObject(\n    @Param('gameId') gameId: string,\n    @Param('id') id: string,\n  ) {\n    try {\n      const key = `game-${gameId}/gameObjects/${id}`;\n      return await this.r2Service.deleteFile('plock-games', key);\n    } catch (error) {\n      throw new HttpException(\n        `Failed to delete game object: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  /**\n   * Updates a specific game object associated with a specified game.\n   * @param {string} gameId - The ID of the game.\n   * @param {string} id - The ID of the game object to be updated.\n   * @param {any} body - The new data for the game object.\n   * @returns {Promise} - The result of the update operation.\n   */\n  @Put(':id')\n  async updateGameObject(\n    @Param('gameId') gameId: string,\n    @Param('id') id: string,\n    @Body() body: any,\n  ) {\n    try {\n      const key = `game-${gameId}/gameObjects/${id}`;\n      return await this.r2Service.updateFile(\n        'plock-games',\n        key,\n        JSON.stringify(body),\n      );\n    } catch (error) {\n      throw new HttpException(\n        `Failed to update game object: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GamesController.html":{"url":"controllers/GamesController.html","title":"controller - GamesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GamesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/games/games.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                games\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createGame\n                            \n                            \n                                    \n                                    Async\n                                deleteGame\n                            \n                            \n                                    \n                                    Async\n                                getAllGames\n                            \n                            \n                                    \n                                    Async\n                                getGameById\n                            \n                            \n                                    \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(gameData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/games/games.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the game to be created\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Returns a promise that resolves with the created game object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/games/games.controller.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe id of the game to be deleted\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Returns a promise that resolves when the game is deleted\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllGames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/games/games.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Returns a promise that resolves with all games\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getGameById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGameById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/games/games.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe id of the game\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Returns a promise that resolves with the game object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateGame(id: string, gameData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/games/games.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe id of the game to be updated\n\n\n                                            \n                                        \n                                        \n                                                gameData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data of the game\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Returns a promise that resolves with the updated game object\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Param,\n  Body,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\n/**\n * @class GamesController\n * @description Controller for handling game related routes\n */\n@Controller('games')\nexport class GamesController {\n  constructor() {} // Inject Prisma service\n\n  /**\n   * @method getAllGames\n   * @description Route handler to get all games\n   * @returns {Promise} Returns a promise that resolves with all games\n   */\n  @Get()\n  async getAllGames() {\n    try {\n      return await prisma.game.findMany();\n    } catch (error) {\n      throw new HttpException(\n        `Failed to retrieve games: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  /**\n   * @method getGameById\n   * @description Route handler to get a specific game by ID\n   * @param {string} id - The id of the game\n   * @returns {Promise} Returns a promise that resolves with the game object\n   */\n  @Get(':id')\n  async getGameById(@Param('id') id: string) {\n    try {\n      const game = await prisma.game.findUnique({\n        where: { id: parseInt(id) },\n      });\n      if (!game) {\n        throw new HttpException('Game not found', HttpStatus.NOT_FOUND);\n      }\n      return game;\n    } catch (error) {\n      throw new HttpException(\n        `Failed to retrieve game: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  /**\n   * @method createGame\n   * @description Route handler to create a new game\n   * @param {Object} gameData - The data of the game to be created\n   * @returns {Promise} Returns a promise that resolves with the created game object\n   */\n  @Post()\n  async createGame(@Body() gameData: any) {\n    try {\n      return await prisma.game.create({ data: gameData });\n    } catch (error) {\n      throw new HttpException(\n        `Failed to create game: ${error.message}`,\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  /**\n   * @method updateGame\n   * @description Route handler to update an existing game\n   * @param {string} id - The id of the game to be updated\n   * @param {Object} gameData - The new data of the game\n   * @returns {Promise} Returns a promise that resolves with the updated game object\n   */\n  @Put(':id')\n  async updateGame(@Param('id') id: string, @Body() gameData: any) {\n    try {\n      return await prisma.game.update({\n        where: { id: parseInt(id) },\n        data: gameData,\n      });\n    } catch (error) {\n      if (error.code === 'P2025') {\n        // Prisma error code for record not found\n        throw new HttpException('Game not found', HttpStatus.NOT_FOUND);\n      }\n      throw new HttpException(\n        `Failed to update game: ${error.message}`,\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  /**\n   * @method deleteGame\n   * @description Route handler to delete a game\n   * @param {string} id - The id of the game to be deleted\n   * @returns {Promise} Returns a promise that resolves when the game is deleted\n   */\n  @Delete(':id')\n  async deleteGame(@Param('id') id: string) {\n    try {\n      return await prisma.game.delete({ where: { id: parseInt(id) } });\n    } catch (error) {\n      if (error.code === 'P2025') {\n        // Prisma error code for record not found\n        throw new HttpException('Game not found', HttpStatus.NOT_FOUND);\n      }\n      throw new HttpException(\n        `Failed to delete game: ${error.message}`,\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/R2Service.html":{"url":"injectables/R2Service.html","title":"injectable - R2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  R2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/r2/r2.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                    Async\n                                updateFile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/services/r2/r2.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs an instance of R2Service and initializes the S3Client with credentials and endpoint.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe configuration service to retrieve R2 credentials and endpoint.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(bucket: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/r2/r2.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Deletes a file from the specified bucket with the given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bucket\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the bucket.\n\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key (path) for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The response from the S3 service.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(bucket: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/r2/r2.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Retrieves a file from the specified bucket with the given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bucket\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the bucket.\n\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key (path) for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The file content and its content type.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    listFiles(bucket: string, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/r2/r2.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Lists files in the specified bucket with the given prefix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bucket\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the bucket.\n\n\n                                            \n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe prefix to filter files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A list of file keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFile(bucket: string, key: string, body: Buffer | Uint8Array | Blob | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/r2/r2.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Updates a file in the specified bucket with the given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bucket\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the bucket.\n\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key (path) for the file.\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                        Buffer | Uint8Array | Blob | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new content of the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The response from the S3 service.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(bucket: string, key: string, body: Buffer | Uint8Array | Blob | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/r2/r2.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Uploads a file to the specified bucket with the given key.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bucket\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the bucket.\n\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key (path) for the file.\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                        Buffer | Uint8Array | Blob | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the file to upload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The response from the S3 service.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/services/r2/r2.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  S3Client,\n  PutObjectCommand,\n  GetObjectCommand,\n  DeleteObjectCommand,\n  ListObjectsV2Command,\n} from '@aws-sdk/client-s3';\nimport { ConfigService } from '@nestjs/config';\nimport { Readable } from 'stream';\n\n@Injectable()\nexport class R2Service {\n  private readonly s3Client: S3Client;\n\n  /**\n   * Constructs an instance of R2Service and initializes the S3Client with credentials and endpoint.\n   * @param {ConfigService} configService - The configuration service to retrieve R2 credentials and endpoint.\n   */\n  constructor(private configService: ConfigService) {\n    const apiToken = this.configService.get('R2_API_TOKEN');\n\n    this.s3Client = new S3Client({\n      region: 'auto', // R2 uses 'auto' for region\n      endpoint: this.configService.get('R2_ENDPOINT'),\n      credentials: {\n        accessKeyId: this.configService.get('R2_ACCESS_KEY_ID'),\n        secretAccessKey: this.configService.get('R2_SECRET_ACCESS_KEY'),\n      },\n    });\n\n    this.s3Client.middlewareStack.add(\n      (next) => async (args) => {\n        if (args.request && typeof args.request === 'object') {\n          (args.request as any).headers = {\n            ...((args.request as any).headers || {}),\n            Authorization: `Bearer ${apiToken}`,\n          };\n        }\n        return next(args);\n      },\n      {\n        step: 'build', // Add the middleware at the build step\n      },\n    );\n  }\n\n  /**\n   * Uploads a file to the specified bucket with the given key.\n   * @param {string} bucket - The name of the bucket.\n   * @param {string} key - The key (path) for the file.\n   * @param {Buffer | Uint8Array | Blob | string} body - The content of the file to upload.\n   * @returns {Promise} The response from the S3 service.\n   */\n  async uploadFile(\n    bucket: string,\n    key: string,\n    body: Buffer | Uint8Array | Blob | string,\n  ) {\n    const command = new PutObjectCommand({\n      Bucket: bucket,\n      Key: key,\n      Body: body,\n      ContentType: 'application/json',\n    });\n    return this.s3Client.send(command);\n  }\n\n  /**\n   * Lists files in the specified bucket with the given prefix.\n   * @param {string} bucket - The name of the bucket.\n   * @param {string} prefix - The prefix to filter files.\n   * @returns {Promise} A list of file keys.\n   * @throws {Error} If no files are found.\n   */\n  async listFiles(bucket: string, prefix: string) {\n    const command = new ListObjectsV2Command({\n      Bucket: bucket,\n      Prefix: prefix,\n    });\n    const data = await this.s3Client.send(command);\n    if (!data.Contents || data.Contents.length === 0) {\n      throw new Error('NoSuchKey: The specified key does not exist.');\n    }\n    return data.Contents.map((item) => item.Key);\n  }\n\n  /**\n   * Retrieves a file from the specified bucket with the given key.\n   * @param {string} bucket - The name of the bucket.\n   * @param {string} key - The key (path) for the file.\n   * @returns {Promise} The file content and its content type.\n   */\n  async getFile(bucket: string, key: string) {\n    const command = new GetObjectCommand({\n      Bucket: bucket,\n      Key: key,\n    });\n    const response = await this.s3Client.send(command);\n    const { Body } = response;\n\n    // Convert stream to buffer\n    const streamToBuffer = async (stream: Readable): Promise => {\n      return new Promise((resolve, reject) => {\n        const chunks: Uint8Array[] = [];\n        stream.on('data', (chunk) => chunks.push(chunk));\n        stream.on('error', reject);\n        stream.on('end', () => resolve(Buffer.concat(chunks)));\n      });\n    };\n\n    const buffer = await streamToBuffer(Body as Readable);\n    return { Body: buffer, ContentType: response.ContentType };\n  }\n\n  /**\n   * Deletes a file from the specified bucket with the given key.\n   * @param {string} bucket - The name of the bucket.\n   * @param {string} key - The key (path) for the file.\n   * @returns {Promise} The response from the S3 service.\n   */\n  async deleteFile(bucket: string, key: string) {\n    const command = new DeleteObjectCommand({\n      Bucket: bucket,\n      Key: key,\n    });\n    return this.s3Client.send(command);\n  }\n\n  /**\n   * Updates a file in the specified bucket with the given key.\n   * @param {string} bucket - The name of the bucket.\n   * @param {string} key - The key (path) for the file.\n   * @param {Buffer | Uint8Array | Blob | string} body - The new content of the file.\n   * @returns {Promise} The response from the S3 service.\n   */\n  async updateFile(\n    bucket: string,\n    key: string,\n    body: Buffer | Uint8Array | Blob | string,\n  ) {\n    const command = new PutObjectCommand({\n      Bucket: bucket,\n      Key: key,\n      Body: body,\n      ContentType: 'application/json',\n    });\n    return this.s3Client.send(command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WinConditionsController.html":{"url":"controllers/WinConditionsController.html","title":"controller - WinConditionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WinConditionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/winconditions/winconditions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                games/:gameId/winConditions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createWinCondition\n                            \n                            \n                                    \n                                    Async\n                                deleteWinCondition\n                            \n                            \n                                    \n                                    Async\n                                getAllWinConditionsByGame\n                            \n                            \n                                    \n                                    Async\n                                updateWinCondition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createWinCondition\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWinCondition(gameId: string, body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/winconditions/winconditions.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteWinCondition\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteWinCondition(gameId: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/winconditions/winconditions.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllWinConditionsByGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWinConditionsByGame(gameId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/winconditions/winconditions.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateWinCondition\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWinCondition(gameId: string, id: string, body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/winconditions/winconditions.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // WinCondition Controller\nimport {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Param,\n  Body,\n  Put,\n} from '@nestjs/common';\nimport { R2Service } from '../services/r2/r2.service';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Controller('games/:gameId/winConditions')\nexport class WinConditionsController {\n  constructor(private readonly r2Service: R2Service) {}\n\n  @Post()\n  async createWinCondition(@Param('gameId') gameId: string, @Body() body: any) {\n    const key = `game-${gameId}/winConditions/${uuidv4()}`;\n    return this.r2Service.uploadFile('plock-games', key, JSON.stringify(body));\n  }\n\n  @Get()\n  async getAllWinConditionsByGame(@Param('gameId') gameId: string) {\n    const prefix = `game-${gameId}/winConditions/`;\n    const keys = await this.r2Service.listFiles('plock-games', prefix);\n    const winConditions = await Promise.all(\n      keys.map(async (key) => {\n        const file = await this.r2Service.getFile('plock-games', key);\n        const body = JSON.parse(file.Body.toString()); // Convert Buffer to string and parse JSON\n        return { key, ...body };\n      }),\n    );\n    return winConditions;\n  }\n\n  @Delete(':id')\n  async deleteWinCondition(\n    @Param('gameId') gameId: string,\n    @Param('id') id: string,\n  ) {\n    const key = `game-${gameId}/winConditions/${id}`;\n    return this.r2Service.deleteFile('plock-games', key);\n  }\n\n  @Put(':id')\n  async updateWinCondition(\n    @Param('gameId') gameId: string,\n    @Param('id') id: string,\n    @Body() body: any,\n  ) {\n    const key = `game-${gameId}/winConditions/${id}`;\n    return this.r2Service.updateFile('plock-games', key, JSON.stringify(body));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/comments/comments.controller.ts\n            \n            controller\n            CommentsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/comments/comments.controller.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gameobjects/gameobjects.controller.ts\n            \n            controller\n            GameObjectsController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/games/games.controller.ts\n            \n            controller\n            GamesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/games/games.controller.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/r2/r2.service.ts\n            \n            injectable\n            R2Service\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/winconditions/winconditions.controller.ts\n            \n            controller\n            WinConditionsController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.588.0\n        \n            @aws-sdk/middleware-signing : ^3.587.0\n        \n            @nestjs/common : ^10.3.8\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : 5.14.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            uuid : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\nDescription\nNest framework TypeScript starter repository, now with Docker support.\nInstallation\nCopy the content of the .env.example file to a new .env file (ignored).\nInside, you'll have to specify missing informations.\nThen, ensure you have Docker and Docker Compose installed on your system. If not, follow the Docker installation guide.\nExample :# Build and run the Docker container\n$ sudo docker compose upOnce the Docker container is running, you need to initialize Prisma for database migrations and code generation:\nExample :# Generate Prisma artifacts\n$ npx prisma generateExample :# Apply Prisma migrations\n$ npx prisma migrate devRunning the app\nWith Docker running and Prisma set up, you can start the app:\nExample :# The app is already running in Docker, but you can check its status\n$ sudo docker compose psTest\nTo test the application, ensure Docker is running, then use the following commands:\nExample :# unit tests\n$ npm run testExample :# end-to-end (e2e) tests\n$ npm run test:e2eExample :# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nR2Service\n\nR2Service\n\nAppModule -->\n\nR2Service->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            prisma   (src/.../comments.controller.ts)\n                        \n                        \n                            prisma   (src/.../games.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/comments/comments.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    src/games/games.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
