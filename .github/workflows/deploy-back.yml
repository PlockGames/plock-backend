name: main
on:
  push:
    branches:
      - main
      - develop

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: '20.x'
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AZURE_VM_SSH_HOST_PROD: ${{ secrets.AZURE_VM_SSH_HOST_PROD }}
  AZURE_VM_SSH_PASSWORD_PROD: ${{ secrets.AZURE_VM_SSH_PASSWORD_PROD }}
  AZURE_VM_SSH_PORT_PROD: ${{ secrets.AZURE_VM_SSH_PORT_PROD }}
  AZURE_VM_SSH_USERNAME_PROD: ${{ secrets.AZURE_VM_SSH_USERNAME_PROD }}
  AZURE_VM_SSH_HOST_DEV: ${{ secrets.AZURE_VM_SSH_HOST_DEV }}
  AZURE_VM_SSH_PASSWORD_DEV: ${{ secrets.AZURE_VM_SSH_PASSWORD_DEV }}
  AZURE_VM_SSH_PORT_DEV: ${{ secrets.AZURE_VM_SSH_PORT_DEV }}
  AZURE_VM_SSH_USERNAME_DEV: ${{ secrets.AZURE_VM_SSH_USERNAME_DEV }}

jobs:
  docker-publish-front:
    name: Docker Publish - Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t soymustael/syntrix-front:${{ github.ref_name }} .

      - name: Push Docker image
        run: docker push soymustael/syntrix-front:${{ github.ref_name }}

  deploy-to-azure-vm-prod:
    needs: docker-publish-front
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: SSH into Droplet, pull image, and run container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.AZURE_VM_SSH_HOST_PROD }}
          username: ${{ env.AZURE_VM_SSH_USERNAME_PROD }}
          password: ${{ env.AZURE_VM_SSH_PASSWORD_PROD }}
          port: ${{ env.AZURE_VM_SSH_PORT_PROD }}
          script: |
            docker login -u ${{ env.DOCKER_USERNAME }} -p ${{ env.DOCKER_PASSWORD }}
            docker pull soymustael/syntrix-front:${{ github.ref_name }}
            if [ "$(docker ps -a | grep server-${{ github.ref_name }})" ]; then
                docker stop server-${{ github.ref_name }}
                docker rm server-${{ github.ref_name }}
            fi
            docker run -d --name server-${{ github.ref_name }} -p 80:80 --env-file config/env/.env soymustael/syntrix-front:${{ github.ref_name }}

  deploy-to-azure-vm-dev:
    needs: docker-publish-front
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: SSH into Droplet, pull image, and run container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.AZURE_VM_SSH_HOST_DEV }}
          username: ${{ env.AZURE_VM_SSH_USERNAME_DEV }}
          password: ${{ env.AZURE_VM_SSH_PASSWORD_DEV }}
          port: ${{ env.AZURE_VM_SSH_PORT_DEV }}
          script: |
            docker login -u ${{ env.DOCKER_USERNAME }} -p ${{ env.DOCKER_PASSWORD }}
            docker pull soymustael/syntrix-front:${{ github.ref_name }}
            if [ "$(docker ps -a | grep server-${{ github.ref_name }})" ]; then
                docker stop server-${{ github.ref_name }}
                docker rm server-${{ github.ref_name }}
            fi
            docker run -d --name server-${{ github.ref_name }} -p 80:80 --env-file config/env/.env soymustael/syntrix-front:${{ github.ref_name }}
